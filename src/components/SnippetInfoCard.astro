---
import { Image } from "astro:assets";
import { Badge } from "@astrojs/starlight/components";

export interface Props {
  name: string;
  author: string;
  description?: string;
  imageSrc?: string;
  src: string;
  tags?: Array<
    ["note", "danger", "success", "caution", "tip", "default", string]
  >;
}

const { name, author, description, imageSrc, src, tags } = Astro.props;
const BASE_URL = import.meta.env.BASE_URL;
---

<a class="block mx-1 my-2" style="text-decoration: none;" href={src}>
  <article class="card relative flex-col mx-auto rounded-xl overflow-hidden">
    {
      imageSrc && (
        <Image
          class={"w-full object-cover"}
          src={
            imageSrc.startsWith("/")
              ? (BASE_URL == "/" ? "" : BASE_URL) + imageSrc
              : imageSrc
          }
          alt={
            "an image showcasing a snippet with " +
            ("a description that reads: " + description || "no description")
          }
          width={512}
          height={512}
        />
      )
    }

    <div
      class="card-text-container inset-0 flex flex-col justify-between items-stretch m-4"
    >
      <div class="card-upper-section">
        <h2 class="card-text card-name text-3xl font-bold m-0">
          {name}
        </h2>
        <div class="my-2">
          {
            tags &&
              tags.map((t) =>
                typeof t === "string" ? (
                  <Badge text={t} />
                ) : (
                  <Badge variant={t[0]} text={t[1]} />
                )
              )
          }
        </div>
        <h6 class="card-text card-description font-normal">{description}</h6>
      </div>

      <div class="card-bottom-section flex justify-between items-center">
        <h6 class="card-author card-text card-author font-normal">
          Author: <span class="font-semibold">{author}</span>
        </h6>
      </div>
    </div>
  </article>
</a>

<style>
  .card {
    border: 1px solid var(--sl-color-gray-5);
    background-color: var(--sl-color-black);
  }

  .card:hover {
    filter: drop-shadow(0 1rem 2rem var(--overlay-white));
    transition: filter 0.2s ease;
  }

  .card-author {
    color: var(--sl-color-gray-2) !important;
  }
</style>
